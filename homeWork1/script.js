//Задание 1
// • Используя Symbol.iterator, создайте объект "Музыкальная коллекция", который можно итерировать.
// Каждая итерация должна возвращать следующий альбом из коллекции.
//
// • Создайте объект musicCollection, который содержит массив альбомов и имеет свойство-символ Symbol.iterator.
// Каждый альбом имеет следующую структуру:
//
// {
// title: "Название альбома",
// artist: "Исполнитель",
// year: "Год выпуска"
// }
//
// • Реализуйте кастомный итератор для объекта musicCollection. Итератор должен перебирать альбомы по порядку.
// • Используйте цикл for...of для перебора альбомов в музыкальной коллекции и вывода их на консоль в
// формате: Название альбома - Исполнитель (Год выпуска)


const musicCollection = [
  {
    title:'Let It Bleed',
    artist:'The Rolling Stones',
    year:1969,
  },
  {
    title: 'Off the Wall',
    artist: 'Michael Jackson',
    year: 1979,
  },
  {
    title: 'Back in the Black',
    artist: 'AC/DC',
    year: 1980,
  }
];

musicCollection[Symbol.iterator] = function () {
  return {
    current: 0,
    to: this.length,
    next() {
      return this.current < this.to
        ? { done: false, value: musicCollection[this.current++] }
        : { done: true };
    }
  }
}

for(let album of musicCollection) {
  console.log(`Название альбома: ${album.title} - Исполнитель: ${album.artist} (${album.year})`);
}

//Задание 2
// Вы управляете рестораном, в котором работают разные повара, специализирующиеся на определенных блюдах.
// Клиенты приходят и делают заказы на разные блюда.
//
// Необходимо создать систему управления этими заказами, которая позволит:
//
// • Отслеживать, какой повар готовит какое блюдо.
// • Записывать, какие блюда заказал каждый клиент.
//
// Используйте коллекции Map для хранения блюд и их поваров, а также для хранения заказов каждого клиента.
// В качестве ключей для клиентов используйте объекты.
//
// Повара и их специализации:
//
// Виктор - специализация: Пицца.
// Ольга - специализация: Суши.
// Дмитрий - специализация: Десерты.
//
// Блюда и их повара:
//
// Пицца "Маргарита" - повар: Виктор.
// Пицца "Пепперони" - повар: Виктор.
// Суши "Филадельфия" - повар: Ольга.
// Суши "Калифорния" - повар: Ольга.
// Тирамису - повар: Дмитрий.
// Чизкейк - повар: Дмитрий.
//
// Заказы:
//
// Клиент Алексей заказал: Пиццу "Пепперони" и Тирамису.
// Клиент Мария заказала: Суши "Калифорния" и Пиццу "Маргарита".
// Клиент Ирина заказала: Чизкейк.

const chefsSpeciales = new Map();
chefsSpeciales.set('Виктор', 'Пицца')
    .set('Ольга', 'Суши')
    .set('Дмитрий', 'Десерты');
console.log('Повара и их специализации:');
chefsSpeciales.forEach((value, key) => {
  console.log(`${key} - специализация: ${value}`);
});

const chefsDishes = new Map();
chefsDishes.set('Виктор', ['Пицца "Маргарита"', 'Пицца "Пепперони"'])
    .set('Ольга', ['Суши "Филадельфия"', 'Суши "Калифорния"'])
    .set('Дмитрий', ['Тирамису', 'Чизкейк'])
console.log('Повара и их блюда:');
chefsDishes.forEach((value, key) => {
  console.log(`повар: ${key} - блюда: ${value}`);
});

const orders = new Map();
orders.set({ name: 'Алексей' }, [[...chefsDishes.get('Виктор')][1], [...chefsDishes.get('Дмитрий')][0]])
    .set({ name: 'Мария' }, [[...chefsDishes.get('Ольга')][0], [...chefsDishes.get('Виктор')][0]])
    .set({ name: 'Ирина' }, [...chefsDishes.get('Дмитрий')][1])
orders.forEach((value, key) => {
  console.log(`Клиент ${key.name} заказал(а) блюда: ${value}`);
});